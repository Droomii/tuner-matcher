<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.IReqMapper">

	<!-- 시군구 모두 얻기 -->
	<insert id="insertReq" parameterType="ReqDTO">
	INSERT INTO REQUEST(
		REQ_SEQ,
		USER_SEQ,
		PIANO_SEQ,
		REQ_CONTENT,
		PHOTO_DIR,
		PREF_DATE,
		REGDATE,
		UPDDATE,
		UPDATER_SEQ,
		REQ_TITLE,
		PRIVATE_SEQ
	)VALUES(
		REQ_SEQ.NEXTVAL,
		#{user_seq},
		#{piano_seq},
		#{req_content},
		#{photo_dir},
		#{pref_date},
		SYSDATE,
		SYSDATE,
		#{user_seq},
		#{req_title},
		#{private_seq}
	)
	
	</insert>
	<select id="getPublicReqList" parameterType="String" resultType="ReqDTO">
	SELECT
		R.REQ_SEQ AS REQ_SEQ,
		R.PIANO_SEQ AS PIANO_SEQ,
		P.PIANO_NAME AS PIANO_NAME,
		R.REQ_TITLE AS REQ_TITLE,
		R.REGDATE AS REGDATE,
		NVL((SELECT COUNT(1) FROM DEAL WHERE DEAL_STATE=0 GROUP BY REQ_SEQ HAVING REQ_SEQ=R.REQ_SEQ),0) AS BIDS
	FROM
		REQUEST R,
		PIANO P
	WHERE
		USER_SEQ=#{0}
		AND  R.PIANO_SEQ=P.PIANO_SEQ
		AND R.PRIVATE_SEQ IS NULL
		AND R.REQ_STATE=0
	</select>
	<select id="getPrivateReqList" parameterType="String" resultType="ReqDTO">
	SELECT
		R.REQ_SEQ AS REQ_SEQ,
		R.PIANO_SEQ AS PIANO_SEQ,
		P.PIANO_NAME AS PIANO_NAME,
		R.REQ_TITLE AS REQ_TITLE,
		R.REGDATE AS REGDATE,
		(SELECT USER_NAME FROM USERINFO WHERE USER_SEQ=R.PRIVATE_SEQ) AS PRIVATE_TUNER_NAME,
		NVL((SELECT COUNT(1) FROM DEAL WHERE DEAL_STATE=0 GROUP BY REQ_SEQ HAVING REQ_SEQ=R.REQ_SEQ),0) AS BIDS
	FROM
		REQUEST R,
		PIANO P
	WHERE
		USER_SEQ=#{0}
		AND  R.PIANO_SEQ=P.PIANO_SEQ
		AND R.PRIVATE_SEQ IS NOT NULL
		AND R.REQ_STATE=0
	</select>
	<select id="getReqDetail" parameterType="String" resultType="ReqDTO">
	SELECT
		R.REQ_SEQ,
		R.USER_SEQ,
		R.PIANO_SEQ,
		R.REQ_TITLE,
		R.REQ_CONTENT,
		R.PRIVATE_SEQ,
		R.PREF_DATE,
		P.SIDO_NAME,
		P.SGG_NAME,
		R.PRIVATE_SEQ
	FROM
		REQUEST R, PIANO P
	WHERE
		REQ_SEQ=#{0}
		AND R.PIANO_SEQ=P.PIANO_SEQ
	</select>
	<update id="updateReq" parameterType="ReqDTO">
	UPDATE REQUEST SET
		REQ_TITLE=#{req_title},
		REQ_CONTENT=#{req_content},
		PREF_DATE=#{pref_date},
		UPDDATE=SYSDATE,
		UPDATER_SEQ=#{updater_seq}
	WHERE REQ_SEQ=#{req_seq}
	</update>
	<delete id="deleteReq" parameterType="String">
	DELETE FROM REQUEST WHERE REQ_SEQ=#{0}
	</delete>
	<select id="getNearReqList" parameterType="String" resultType="ReqDTO">
	SELECT
		R.REQ_SEQ,
		R.REQ_TITLE,
		R.REQ_CONTENT,
		NVL((SELECT COUNT(1) FROM DEAL WHERE DEAL_STATE=0 GROUP BY REQ_SEQ HAVING REQ_SEQ=R.REQ_SEQ),0) AS BIDS,
		P.SIDO_NAME,
		P.SGG_NAME,
		P.X_POS,
		P.Y_POS,
		P.ADDR
	FROM REQUEST R, PIANO P
	WHERE 
		R.PIANO_SEQ=P.PIANO_SEQ
		AND P.SGG_CODE LIKE #{0}
		AND R.PRIVATE_SEQ IS NULL
		AND R.REQ_STATE=0
	</select>
	<update id="auctionOff" parameterType="String">
		UPDATE REQUEST SET REQ_STATE=1 WHERE REQ_SEQ=#{0}
	</update>
	<select id="getTunerPrivateReqList" parameterType="String" resultType="ReqDTO">
	SELECT
		REQ_SEQ,
		REQ_TITLE,
		REGDATE,
		(SELECT USER_NAME FROM USERINFO WHERE USER_SEQ=REQUEST.USER_SEQ) AS REQUESTER_NICK,
		NVL((SELECT COUNT(1) FROM DEAL WHERE DEAL_STATE=0 GROUP BY REQ_SEQ HAVING REQ_SEQ=REQUEST.REQ_SEQ),0) AS BIDS
	FROM
		REQUEST
	WHERE
		PRIVATE_SEQ=#{0}
		AND REQ_STATE=0
	</select>
</mapper>